{"version":3,"sources":["components/UI/LoadingSpinner.js","components/layout/MainNavigation.module.css","hooks/use-http.js","lib/api.js","components/comments/NewCommentForm.module.css","components/layout/Layout.module.css","components/comments/Comments.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","MainNavigation","styles","header","logo","nav","navData","isActive","active","to","Layout","props","main","children","NewCommentForm","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","quoteID","useParams","loadedComments","addedCommentHandler","length","onClick","NewQuote","React","lazy","Quotes","NotFound","FullScreenQuote","App","fallback","classname","path","element","replace","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1540a4e6.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2HUpi\",\"logo\":\"MainNavigation_logo__38Gis\",\"nav\":\"MainNavigation_nav__3dF0e\",\"active\":\"MainNavigation_active__rQxau\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-router-quotes-b2c0c-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__JssRC\",\"loading\":\"NewCommentForm_loading__12MKV\",\"control\":\"NewCommentForm_control__3Pcgl\",\"actions\":\"NewCommentForm_actions__2Ed98\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2yvrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3CIzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__yDP1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1VZnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2oUjG\"};","import React from \"react\";\r\nimport styles from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.logo}>\r\n        <p>Great Quotes</p>\r\n      </div>\r\n      <nav className={styles.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              className={(navData) => (navData.isActive ? styles.active : \" \")}\r\n              to=\"/quotes\"\r\n            >\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              className={(navData) => (navData.isActive ? styles.active : \" \")}\r\n              to=\"new-quote\"\r\n            >\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default MainNavigation;\r\n","import styles from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport { Fragment } from \"react\";\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={styles.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Layout;\r\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n  const { onAddedComment } = props;\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteID } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No Comments were added yet!</p>;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteID}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { Suspense } from \"react\";\nimport { Route, Routes, Navigate, Link } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport Comments from \"./components/comments/Comments\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nconst NewQuote = React.lazy(() => import(\"./Pages/NewQuotePage\"));\nconst Quotes = React.lazy(() => import(\"./Pages/QuotesPage\"));\nconst NotFound = React.lazy(() => import(\"./Pages/NotFoundPage\"));\nconst FullScreenQuote = React.lazy(() => import(\"./Pages/FullScreenQuotePage\"));\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div classname=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Routes>\n          <Route path=\"/\" element={<Navigate replace to=\"/quotes\" />} />\n          <Route path=\"/quotes\" element={<Quotes />} />\n          <Route path=\"/new-quote\" element={<NewQuote />} />\n          <Route path=\"/quotes/:quoteID/*\" element={<FullScreenQuote />}>\n            <Route\n              path={``}\n              exact\n              element={\n                <div className=\"centered\">\n                  <Link className=\"btn--flat\" to={`comments`}>\n                    Load Comments\n                  </Link>\n                </div>\n              }\n            />\n            <Route path={`comments`} element={<Comments />} />\n          </Route>\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}